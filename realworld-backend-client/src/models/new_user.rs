/*
 * realworld-backend
 *
 * RealWorld backend implementation in Rust.
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: git@heikoseeberger.de
 * Generated by: https://openapi-generator.tech
 */

/// NewUser : New user to be registered.

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct NewUser {
    /// An email address.
    #[serde(rename = "email")]
    pub email: String,
    /// New type for `secrecy::SecretString`.
    #[serde(rename = "password")]
    pub password: String,
    #[serde(rename = "username")]
    pub username: String,
}

impl NewUser {
    /// New user to be registered.
    pub fn new(email: String, password: String, username: String) -> NewUser {
        NewUser {
            email,
            password,
            username,
        }
    }
}
